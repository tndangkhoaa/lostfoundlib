document.addEventListener("DOMContentLoaded", () => {
    // 1. Kh·ªüi t·∫°o Supabase Client
    const SUPABASE_URL = 'https://nrsksqrofooddfsiavot.supabase.co';
    const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5yc2tzcXJvZm9vZGRmc2lhdm90Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDcwMjc3NjgsImV4cCI6MjA2MjYwMzc2OH0.nMWFx8T4r3o5Nu1RfuX07KhpAOlaoj9QQRxTMv9x-8o';
  
    const { createClient } = supabase;
    const supabaseClient = createClient(SUPABASE_URL, SUPABASE_KEY);
  
    // 2. M·∫≠t kh·∫©u admin ƒë∆°n gi·∫£n
    const ADMIN_PASSWORD = "admin123";
    // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
    if (localStorage.getItem("isAdminLoggedIn") === "true") {
        showAdminContent();
    }
  
    // ƒêƒÉng nh·∫≠p
    window.adminLogin = function () {
        const password = document.getElementById("admin-password").value;
        if (password === ADMIN_PASSWORD) {
            localStorage.setItem("isAdminLoggedIn", "true");
            showAdminContent();
        } else {
            alert("‚ùå M·∫≠t kh·∫©u kh√¥ng ƒë√∫ng!");
        }
    };
  
    // Hi·ªÉn th·ªã trang admin
    function showAdminContent() {
        document.getElementById("login-section").style.display = "none";
        document.getElementById("admin-content").style.display = "block";
        loadAdminItems();
    }
  
    // ƒêƒÉng xu·∫•t
    window.logoutAdmin = function () {
        localStorage.removeItem("isAdminLoggedIn");
        location.reload();
    };
  
    // T·∫£i d·ªØ li·ªáu t·ª´ Supabase
    async function loadAdminItems() {
        try {
            const { data, error } = await supabaseClient
                .from('LFLibrary')
                .select('*')
                .order('date_reported', { ascending: false });

            if (error) throw error;

            const itemsList = document.getElementById("admin-items-list");
            itemsList.innerHTML = "";

            data.forEach(item => {
                const row = document.createElement("tr");

                // T·∫°o dropdown tr·∫°ng th√°i
                const statusSelect = document.createElement("select");
                statusSelect.className = "status-dropdown";
                const statusOptions = ["Ch∆∞a nh·∫≠n", "ƒê√£ nh·∫≠n", "ƒê√£ tr·∫£ l·∫°i"];
                statusOptions.forEach(status => {
                    const option = document.createElement("option");
                    option.value = status;
                    option.textContent = status;
                    if (status === item.status) option.selected = true;
                    statusSelect.appendChild(option);
                });
                statusSelect.addEventListener("change", () => updateStatus(item.id, statusSelect.value));

                // T·∫°o n√∫t x√≥a
                const deleteBtn = document.createElement("button");
                deleteBtn.textContent = "X√≥a";
                deleteBtn.className = "delete-btn";
                deleteBtn.onclick = () => deleteItem(item.id);

                // X·ª≠ l√Ω ng√†y b√°o c√°o theo ƒë·ªãnh d·∫°ng ng√†y/th√°ng/nƒÉm
                const formattedDate = new Date(item.date_reported).toLocaleDateString('vi-VN');

                // T·∫°o h√†ng d·ªØ li·ªáu
                row.innerHTML = `
                  <td>${item.id.slice(0, 5)}...</td>
                  <td>${item.title || 'Kh√¥ng c√≥ ti√™u ƒë·ªÅ'}</td>
                  <td>${item.image_url ? `<img src="${item.image_url}" alt="·∫¢nh" style="max-width:60px; border-radius:4px;">` : 'Kh√¥ng c√≥'}</td>
                  <td>${item.location_found || 'Kh√¥ng r√µ'}</td>
                  <td>${formattedDate}</td>
                  <td>${item.contact_email || 'Kh√¥ng c√≥'}</td>
                  <td class="status-cell"></td>
                  <td class="action-btns"></td>
                `;
  
                row.querySelector(".status-cell").appendChild(statusSelect);
                row.querySelector(".action-btns").appendChild(deleteBtn);
                itemsList.appendChild(row);
            });
        } catch (err) {
            console.error("L·ªói khi t·∫£i d·ªØ li·ªáu:", err);
            alert("Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu: " + err.message);
        }
    }
  
    // C·∫≠p nh·∫≠t tr·∫°ng th√°i
    async function updateStatus(id, status) {
        try {
            const { error } = await supabaseClient
                .from('LFLibrary')
                .update({ status })
                .eq('id', id);
            if (error) throw error;
            alert("‚úÖ Tr·∫°ng th√°i ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t.");
        } catch (err) {
            console.error("L·ªói c·∫≠p nh·∫≠t tr·∫°ng th√°i:", err);
            alert("‚ùå Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i: " + err.message);
        }
    }
  
    // X√≥a item
    async function deleteItem(id) {
        if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a m·ª•c n√†y?")) return;
        try {
            const { error } = await supabaseClient
                .from('LFLibrary')
                .delete()
                .eq('id', id);
            if (error) throw error;
            alert("üóëÔ∏è M·ª•c ƒë√£ ƒë∆∞·ª£c x√≥a.");
            loadAdminItems();
        } catch (err) {
            console.error("L·ªói khi x√≥a:", err);
            alert("‚ùå Kh√¥ng th·ªÉ x√≥a: " + err.message);
        }
    }
});
